<?php
/*1. В чем заключается суть ключевого слова global? Когда его применение целесообразно?

Ключевое слово global указывает, что данная переменная будет той же самой переменной повсюду в программе,
 то есть глобальной переменной. Изменение глобальной переменной внутри функции можно наблюдать за ее пределами.
В действительности мы не должны использовать глобальные переменные изза возможных последствий в случа, к примеру, ее
ошибочного изменния.
*/
/*
2. Какие суперглобальные переменные вы знаете?

Суперглобальными переменными являются:
$GLOBALS
$_SERVER
$_GET
$_POST
$_FILES
$_COOKIE
$_SESSION
$_REQUEST
$_ENV
*/
/*
3. Когда нужно использовать закрывающий дескриптор “?>“?

Дескрипторы указывают Web-серверу, где начинается, а где завершается PHP-код. Любой текст, расположенный между дескрипторами,
будет интерпретироваться как PHP-код. Любой текст вне этих дескрипторов будет обрабатываться как обычный HTML-код.
РНР-декрипторы позволяют выполнить выход из HTML.*/


/*
4. Что выведет программа в каждом случае и почему?

Выведет 161.
Подобное поведенеие связано с областью видимости переменных. Первое echo выводит x у ктоторого глобальная область видимости,
второй - выведит х который объявлен локально внутри функции. И третий снова выведет глобальную переменную.
*/

function changeX($x)
{
    $x += 5;
    echo $x;
}

$x = 1;
echo $x;

changeX($x);
echo $x;


/*
5. Что выведет программа в каждом случае и почему?

Выведет: 012
Статическая переменная существует только в локальной области видимости функции, но не теряет своего значения,
когда выполнение программы выходит из этой области видимости.
$a будет проинициализирована только при первом вызове функции, а каждый вызов функции test() будет выводить
значение $a и инкрементировать его.
*/

function test()
{
    static $a = 0;
    echo $a;
    $a++;
}
test();
test();
test();

/*
6. Как перевернуть массив? Есть массив array(‘h’, ‘e’, ‘l’, ‘l’, ‘o’), как из него получить array(‘o’, ‘l’, ‘l’, ‘e’, ‘h’)? */
$input = array('h', 'e', 'l', 'l', 'o');
$reversed = array_reverse($input);
print_r($reversed);
/*
7. Как перевернуть строку задом наперед?
*/
echo strrev("Hello world!"). '|';

/*
8. Что будет результатом работы данного кода?*
Выведет: Two, происходит инициализация переменной, а не сравнение
*/
$c = 0;
if($b = $c)
    echo "One" . '|';
else
    echo "Two" . '|';

/*
9. Сгенерировать три случайных числа в диапазоне от 0 до 10. Если сумма этих чисел меньше 15, сгенерировать новую тройку.*/

function generate() {
    $a = rand(0, 10);
    $b = rand(0, 10);
    $c = rand(0, 10);
    $val = $a+ $b+ $c;
    if ($val  > 15) {
        return $val;
    }
    return generate();
}

echo 'Результат : ' . generate() . '|';

/*
10. Какое число выведет данный код?
$i = 10;
$i += ++i + $i + $i++;
echo $i;
*/
$i = 10;
$i += ++$i + $i + $i++; // 12 + ((10+1) + 11 + (11) потом +1) = 45
echo 'Результат : ' . $i . '|';
/*
11. Что выведет приведенный ниже код?

Выведет: 12
Строка это массив символов.
$a = '1'; // Строка 1 или массив [0 => '1']
Далее произошло преобразование символа '1'  к числу.
$a[1] = '2'; // Назначили по ключу 1 цифру 2. Строка 12 или массив [0 => '1', 1 => '2']
Т.о. в массиве стало два символа 12
*/
$a = "1";
$a[$a] = "2";
echo  'Результат : ' . $a . '|';
